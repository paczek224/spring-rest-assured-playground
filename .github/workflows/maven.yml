# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven (without tests)
      run: mvn -B package -DskipTests

    - name: Run Spring Boot in background
      run: nohup mvn spring-boot:run &

    - name: Wait for app to start
      run: sleep 20

    - name: Build with Maven
      run: mvn test

    - name: Generate Allure Report
      run: mvn allure:report

    - name: Upload Allure report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: target/site/allure-maven-plugin

    - name: Deploy Allure Report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/site/allure-maven-plugin
        publish_branch: gh-pages
        deploy_name: Allure Report
